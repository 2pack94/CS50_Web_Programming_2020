# user used by worker processes
user www-data;
# Defines the number of worker processes. auto: autodetect based on the number of available CPU cores.
worker_processes auto;
# Defines a file that will store the process ID of the main process. 
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# Sets the maximum number of simultaneous connections that can be opened by a worker process.
events {
    worker_connections 1024;
}

http {
    # Defines groups of servers that can be referenced by the proxy_pass directive.
    # In this case the Back- and Frontend consist of only 1 server.
    # backend and frontend refer to the docker compose service names (reachable in the Network).
    upstream backend {
        server backend:8000;
    }

    upstream frontend {
        server frontend:3000;
    }

    # configuration for a virtual server.
    server {
        # Sets the address and port on which the server will accept requests. 
        listen 80;

        # list of server names.
        # nginx tests the “Host” request header field to determine which server the request should be routed to.
        # If there is no match, the default server for this port is selected (first one by deafult).
        server_name localhost 127.0.0.1;

        # Pass all requests to the /api location to the proxied server at http://backend
        # The /api path is also configured in the global urls.py file in Django.
        # e.g. a request to http://127.0.0.1/api/something will be forwarded to http://backend/api/something
        # (in the docker compose file, port 81 is forwarded to port 80 in the container)
        # set additional headers in the requests.
        location /api {
            proxy_pass          http://backend;
            proxy_http_version  1.1;
            proxy_redirect      default;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }

        location /admin {
            proxy_pass          http://backend;
            proxy_http_version  1.1;
            proxy_redirect      default;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }

        # needed for static CSS and JS files required by the django admin site.
        location /static/admin {
            proxy_pass          http://backend;
            proxy_http_version  1.1;
            proxy_redirect      default;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }

        location / {
            proxy_pass          http://frontend;
            proxy_http_version  1.1;
            proxy_redirect      default;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Host $server_name;
        }
    }
}
